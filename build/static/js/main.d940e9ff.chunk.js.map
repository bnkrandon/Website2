{"version":3,"sources":["Pages/LandingPage.js","Pages/Testimonials.js","Pages/WorkForUs.js","Pages/JoinUs.js","Pages/Projects.js","Pages/AboutUs.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","react_default","a","createElement","id","Component","AboutUs","className","App","LandingPage_LandingPage","AboutUs_AboutUs","JoinUs_LandingPage","Projects_LandingPage","Testimonials_LandingPage","WorkForUs_LandingPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iXAGqBA,0LAIjB,OACAC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,GAAK,SACRH,EAAAC,EAAAC,cAAA,OAAKC,GAAK,MACVH,EAAAC,EAAAC,cAAA,kFADA,qBAKAF,EAAAC,EAAAC,cAAA,OAAKC,GAAK,MACVH,EAAAC,EAAAC,cAAA,QAAMC,GAAG,QAAT,OADA,IAC2BH,EAAAC,EAAAC,cAAA,QAAMC,GAAK,UAAX,UAD3B,kBAZiCC,cCApBL,0LAIjB,OACAC,EAAAC,EAAAC,cAAA,mBALqCE,cCApBL,0LAIjB,OACAC,EAAAC,EAAAC,cAAA,mBALqCE,cCApBL,0LAIjB,OACAC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kFACAF,EAAAC,EAAAC,cAAA,OAAKC,GAAK,WACVH,EAAAC,EAAAC,cAAA,OAAKC,GAAK,eAAV,mBAGAH,EAAAC,EAAAC,cAAA,OAAKC,GAAK,cAAV,uDAXqCC,cCApBL,0LAIjB,OACAC,EAAAC,EAAAC,cAAA,mBALqCE,cCApBC,0LAEb,OACEL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBAEXN,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBACJH,EAAAC,EAAAC,cAAA,kFAGAF,EAAAC,EAAAC,cAAA,6BACqBF,EAAAC,EAAAC,cAAA,qBADrB,YAC8CF,EAAAC,EAAAC,cAAA,qBAD9C,2IATmBE,cCqBtBG,0LAbX,OACEP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACM,EAAD,MACAR,EAAAC,EAAAC,cAACO,EAAD,MACAT,EAAAC,EAAAC,cAACQ,EAAD,MACAV,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAACW,EAAD,cATUT,cCGEU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d940e9ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './LandingPage.css';\r\n\r\nexport default class LandingPage extends Component {\r\n\r\n\r\n  render() {\r\n    return(\r\n    <div>\r\n      <div id = \"title\">\r\n        <div id = \"ds\">\r\n        <style>@import url('https://fonts.googleapis.com/css?family=Questrial');</style>\r\n        DIGITAL SOLUTIONS\r\n        </div>\r\n\r\n        <div id = \"sg\">\r\n        <span id=\"gray\">FOR</span> <span id = \"social\">SOCIAL</span> GOOD\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Testimonials.css';\r\n\r\nexport default class LandingPage extends Component {\r\n\r\n\r\n  render() {\r\n    return(\r\n    <div>\r\n    </div>\r\n  )\r\n\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './WorkForUs.css';\r\n\r\nexport default class LandingPage extends Component {\r\n\r\n\r\n  render() {\r\n    return(\r\n    <div>\r\n    </div>\r\n  )\r\n\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './JoinUs.css';\r\n\r\nexport default class LandingPage extends Component {\r\n\r\n\r\n  render() {\r\n    return(\r\n    <div>\r\n    <style>@import url('https://fonts.googleapis.com/css?family=Questrial');</style>\r\n    <div id = \"content\">\r\n    <div id = \"JoinUsTitle\">\r\n    Give us a shot.\r\n    </div>\r\n    <div id = \"JoinUsText\">\r\n    WE PROMISE WE'LL EXCEED YOUR EXPECTATIONS.\r\n    </div>\r\n    </div>\r\n\r\n    </div>\r\n  )\r\n\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Projects.css';\r\n\r\nexport default class LandingPage extends Component {\r\n\r\n\r\n  render() {\r\n    return(\r\n    <div>\r\n    </div>\r\n  )\r\n\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './AboutUs.css';\r\n\r\nexport default class AboutUs extends Component {\r\n    render() {\r\n        return(\r\n          <div className=\"AboutUsWrapper\">\r\n\r\n              <div id=\"AboutUsParagraph\">\r\n                  <style>\r\n                      @import url('https://fonts.googleapis.com/css?family=Questrial');\r\n                  </style>\r\n                  <p>\r\n                      We emphasize the <em>product</em> and the <em>process</em> â€” our developers learn and apply new technologies to custom tailored products that directly impact client organizations.\r\n                  </p>\r\n              </div>\r\n          </div>\r\n          )\r\n\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport LandingPage from './Pages/LandingPage.js';\r\nimport Testimonials from './Pages/Testimonials.js'\r\nimport WorkForUs from './Pages/WorkForUs.js';\r\nimport JoinUs from './Pages/JoinUs.js';\r\nimport Projects from './Pages/Projects.js';\r\nimport AboutUs from './Pages/AboutUs.js';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LandingPage/>\r\n        <AboutUs/>\r\n        <JoinUs/>\r\n        <Projects/>\r\n        <Testimonials/>\r\n        <WorkForUs/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}